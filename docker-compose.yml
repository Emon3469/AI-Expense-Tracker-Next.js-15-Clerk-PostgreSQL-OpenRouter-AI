version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ai-expense-tracker-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: neondb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ai-expense-tracker-network

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-expense-tracker-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/neondb?sslmode=disable
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up
      - NEXT_PUBLIC_CLERK_SIGN_UP_FALLBACK_REDIRECT_URL=/
      - NEXT_PUBLIC_CLERK_SIGN_IN_FALLBACK_REDIRECT_URL=/
      - NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
    depends_on:
      - postgres
    networks:
      - ai-expense-tracker-network
    # Run database migrations before starting the app
    command: >
      sh -c "npx prisma migrate deploy &&
             npx prisma generate &&
             node server.js"

  # Optional: Database migration service (runs once)
  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-expense-tracker-migrate
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/neondb?sslmode=disable
    depends_on:
      - postgres
    networks:
      - ai-expense-tracker-network
    command: >
      sh -c "npx prisma migrate deploy &&
             npx prisma generate"
    restart: "no"

volumes:
  postgres_data:
    driver: local

networks:
  ai-expense-tracker-network:
    driver: bridge